#
# Config file for collectd(1).
# Please read collectd.conf(5) for a list of options.
# http://collectd.org/
#

##############################################################################
# Global settings for the daemon.                                            #
##############################################################################

#HostnameReplace

TypesDB     "CD_INST_PATH/share/collectd/types.db"
TypesDB     "CUSTOM_TYPES_DIR/custom_types.db"

Interval 30
AlignRead true

ReadThreads     2
WriteThreads    1

##############################################################################
# Logging                                                                    #
#----------------------------------------------------------------------------#
# Plugins which provide logging functions should be loaded first, so log     #
# messages generated when loading or configuring other plugins can be        #
# accessed.                                                                  #
##############################################################################

LoadPlugin logfile

<Plugin logfile>
	LogLevel info
	File pikalogfile
	Timestamp true
	PrintSeverity false
</Plugin>

##############################################################################
# LoadPlugin section                                                         #
##############################################################################

# plugin read functions are executed in reverse order?

<LoadPlugin memory>
  Interval 30
</LoadPlugin>
<Plugin memory>
  ValuesAbsolute true
  ValuesPercentage false
</Plugin>

<LoadPlugin cpu>
  Interval 30
  AlignReadOffset 0.02
</LoadPlugin>
<Plugin cpu>
  ReportByCpu true
  ReportByState false
  ValuesPercentage true
  ReportNumCpu false
  ReportGuestState false
  SubtractGuestState false
</Plugin>

<LoadPlugin disk>
  Interval 30
  AlignReadOffset 0.04
</LoadPlugin>
<Plugin disk>
  Disk "sda"
  IgnoreSelected false
</Plugin>

<LoadPlugin gpu_nvidia>
  Interval 30
  AlignReadOffset 0.06
</LoadPlugin>
<Plugin gpu_nvidia>
#  InstanceByGPUIndex false
  InstanceByGPUName false
</Plugin> #gpu_nvidia_end

<LoadPlugin likwid>
   Interval 60
   AlignReadOffset 30.1
</LoadPlugin>
<Plugin likwid>
  NormalizeFlops flops_any
  AccessMode 0 # 1 for accessdaemon, 0 for direct access (only as root or with perf)
  Mtime 15
  Groups "pika_metrics_1,pika_metrics_2"
  # by default metrics are reported per core
  PerSocketMetrics "mem_bw,rapl_power"
  Verbose 2
</Plugin> #likwid_end

<LoadPlugin python>
   Interval 30
   AlignReadOffset 0.08
</LoadPlugin>
<Plugin python>
  ModulePath "CD_PLUGINS_PYTHON"
  LogTraces true
  Interactive false
  
  Import "influx_write"
  <Module influx_write>
    #INFLUXHOST
    #INFLUXPORT
    #INFLUXUSER
    #INFLUXPWD
    #INFLUXDBNAME
    batch_size 20
    cache_size 2000
    StoreRates true
    ssl false
  </Module>
  
  Import "ib_bw"
  <Module ib_bw>
    #devices "/sys/class/infiniband/mlx4_0"
    #directory "/sys/class/infiniband"
    recheck_limit 1440
  </Module>
  Import "lustre_bw"
  <Module lustre_bw>
    #path "Path to lustre file systems (comma separated)"
    recheck_limit 1440
  </Module>
</Plugin>

LoadPlugin unixsock
<Plugin unixsock>
  SocketFile "/tmp/collectd_pika-unixsock"
  SocketGroup "root"
  SocketPerms "0770"
  DeleteSocket true
</Plugin>

#LoadPlugin write_log

##############################################################################
# Filter configuration                                                       #
##############################################################################

# Load required matches:
LoadPlugin match_regex
LoadPlugin target_scale
LoadPlugin target_set
PreCacheChain "pika"
<Chain "pika">
  ### ignore other than memory used
  <Rule "mem_used_only">
    <Match "regex">
      Plugin "^memory$"
      TypeInstance "^[f|s|c|b]"
    </Match>
    Target "stop"
  </Rule>
  
  # for the disk plugin, ignore other than disc_octets and disk_ops
  <Rule "disk_o_only">
    <Match "regex">
      Plugin "^disk$"
      Type "^(p|disk_[t|m|i])" #starts with p or disk_t|i|m
      #Type "^(?!disk_o).+" # do not start with "disk_o" # does not work with collectd
    </Match>
    Target "stop"
  </Rule>
  # rename "disc_octets" to "bytes"
  <Rule "rename_disk_octets">
    <Match "regex">
      Plugin "^disk$"
      Type "^disk_octets$"
    </Match>
    <Target "set">
      TypeInstance "bytes"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  # no need to have an additional "disk" in the field name
  <Rule "rename_disk_ops"> 
    <Match "regex">
      Plugin "^disk$"
      Type "^disk_ops$"
    </Match>
    <Target "set">
      TypeInstance "ops"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  
  # rename CPU "active" to "used" and multiply each value by 0.01
  <Rule "handle_cpu_active">
    <Match "regex">
      Plugin "^cpu$"
      TypeInstance "^active$"
    </Match>
    <Target "scale">
      Factor 0.01
    </Target>
    <Target "set">
      TypeInstance "used"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  
  # handle all rules for the NVML plugin
  <Rule "nvml_no_freq">
    <Match "regex">
      Plugin "^gpu_nvidia$"
    </Match>
    <Target jump>
      Chain "handle_gpu_nvidia"
    </Target>
  </Rule>
</Chain>

<Chain "handle_gpu_nvidia">
  <Rule "nvml_no_freq">
    <Match "regex">
      Type "^freq" #frequency for multiprocessor and memory
    </Match>
    Target "stop"
  </Rule>
  <Rule "nvml_no_freemem">
    <Match "regex">
      TypeInstance "^free"
    </Match>
    Target "stop"
  </Rule>
  <Rule "rename_core">
    <Match "regex">
      Type "^temp"
    </Match>
    <Target "set">
      TypeInstance "temp"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  <Rule "rename_used_mem">
    <Match "regex">
      Type "^memory$"
      TypeInstance "^used$"
    </Match>
    <Target "set">
      TypeInstance "mem_used"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
</Chain>
