#
# Config file for collectd(1).
# Please read collectd.conf(5) for a list of options.
# http://collectd.org/
#

##############################################################################
# Global                                                                     #
#----------------------------------------------------------------------------#
# Global settings for the daemon.                                            #
##############################################################################

#Hostname    "localhost"
#FQDNLookup   true
BaseDir     "${prefix}/var/lib/collectd"
#PIDFile     "/tmp/collectd.pid"
TypesDB     "${prefix}/share/collectd/types.db"
TypesDB     "${path_to_custom_types}/custom_types.db"

#----------------------------------------------------------------------------#
# Interval at which to query values. This may be overwritten on a per-plugin #
# base by using the 'Interval' option of the LoadPlugin block:               #
#   <LoadPlugin foo>                                                         #
#       Interval 60                                                          #
#   </LoadPlugin>                                                            #
#----------------------------------------------------------------------------#
Interval 30
StartRead  30.012

ReadThreads     2
WriteThreads    1

##############################################################################
# Logging                                                                    #
#----------------------------------------------------------------------------#
# Plugins which provide logging functions should be loaded first, so log     #
# messages generated when loading or configuring other plugins can be        #
# accessed.                                                                  #
##############################################################################

LoadPlugin logfile

<Plugin logfile>
	LogLevel info
	File STDOUT
	Timestamp false
	PrintSeverity false
</Plugin>

##############################################################################
# LoadPlugin section                                                         #
##############################################################################

<LoadPlugin memory>
  Interval 360
  StartRead 601.42
</LoadPlugin>
<Plugin memory>
  ValuesAbsolute true
  ValuesPercentage false
</Plugin>

<LoadPlugin cpu>
  Interval 30
  StartRead 0.02
</LoadPlugin>
<Plugin cpu>
  ReportByCpu true
  ReportByState false
  ValuesPercentage false
  ReportNumCpu false
  ReportGuestState false
  SubtractGuestState false
</Plugin>

<LoadPlugin disk>
  Interval 30
  StartRead 0.04
</LoadPlugin>
<Plugin disk>
#  Disk "/^[hs]d[a-f][0-9]?$/"
  Disk "sda"
  IgnoreSelected false
#  UdevNameAttr "DEVNAME"
</Plugin>

# comment out, if liblikwid.so is not in LD_LIBRARY_PATH
<LoadPlugin likwid>
   Interval 60 # read every minute
   StartRead 50 # start at second 50 of a minute
</LoadPlugin>
<Plugin likwid>
  #NormalizeFlops flops_any # normalize all FLOPS counts into single precision flops, provide name of the metric
  AccessMode 0 # 1 for accessdaemon, 0 for direct access (only as root or with perf)
  Mtime 10 # measure over 10 seconds
  Groups BRANCH
  #PerSocketMetrics mem_bw,rapl_power # by default metrics are reported per core
  Verbose 1
</Plugin>

<LoadPlugin python>
   Interval 30
   StartRead 30.3
</LoadPlugin>
<Plugin python>
    ModulePath "/path/to/your/python/plugins"
    LogTraces true
    Interactive false
    
#    Import "influx_write"
#    <Module influx_write>
#      host "localhost"
#      port 8086
#      user "admin"
#      pwd "prope18!"
#      batch_size 20
#      cache_size 2000
#    </Module>
    
    Import "ib_bw"
    <Module ib_bw>
#      devices "/sys/class/infiniband/mlx4_0"
#      directory "/sys/class/infiniband"
       recheck_limit 1440
    </Module>
    Import "lustre_bw"
    <Module lustre_bw>
#        path "Path to lustre file systems"
       recheck_limit 1440
    </Module>
</Plugin>

LoadPlugin write_log
<Plugin write_log>
   Format Graphite
</Plugin>

##############################################################################
# Filtering section                                                          #
##############################################################################

### ignore other than memory used, rename CPU "active" to "used" and multiply each value by 0.01
LoadPlugin match_regex
LoadPlugin target_scale
LoadPlugin target_set
PreCacheChain "prope"
<Chain "prope">
  <Rule "mem_used_only">
    <Match "regex">
      Plugin "^memory$"
      TypeInstance "^[f|s|c|b]"
    </Match>
    Target "stop"
  </Rule>
  <Rule "disk_o_only">
    <Match "regex">
      Plugin "^disk$"
      Type "^disk_[t|m|i]" #octets and ops
    </Match>
    Target "stop"
  </Rule>
  <Rule "rename_disk_octets">
    <Match "regex">
      Plugin "^disk$"
      Type "^disk_octets$"
    </Match>
    <Target "set">
      TypeInstance "bytes"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  <Rule "handle_cpu_active">
    <Match "regex">
      Plugin "^cpu$"
      TypeInstance "^active$"
    </Match>
    <Target "scale">
      Factor 0.01
    </Target>
    <Target "set">
      TypeInstance "used"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  # handle all rules for the NVML plugin
  <Rule "nvml_no_freq">
    <Match "regex">
      Plugin "^gpu_nvidia$"
    </Match>
    <Target jump>
      Chain "handle_gpu_nvidia"
    </Target>
  </Rule>
</Chain>

<Chain "handle_gpu_nvidia">
  <Rule "nvml_no_freq">
    <Match "regex">
      Type "^freq" #frequency for multiprocessor and memory
    </Match>
    Target "stop"
  </Rule>
  <Rule "nvml_no_freemem">
    <Match "regex">
      TypeInstance "^free"
    </Match>
    Target "stop"
  </Rule>
  <Rule "rename_core">
    <Match "regex">
      Type "^temp"
    </Match>
    <Target "set">
      TypeInstance "temp"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
  <Rule "rename_used_mem">
    <Match "regex">
      Type "^memory$"
      TypeInstance "^used$"
    </Match>
    <Target "set">
      TypeInstance "mem_used"
    </Target>
    Target "write"
    Target "stop"
  </Rule>
</Chain>
