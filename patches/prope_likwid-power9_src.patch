diff -ruN src.orig/includes/likwid.h src/includes/likwid.h
--- src.orig/includes/likwid.h	2019-06-03 10:12:04.532833000 +0200
+++ src/includes/likwid.h	2019-06-03 10:17:21.616832000 +0200
@@ -751,6 +751,14 @@
 @return error code (-ENOENT if groupId is invalid and -1 if the counters of one CPU cannot be set up)
 */
 extern int perfmon_setupCounters(int groupId) __attribute__ ((visibility ("default") ));
+/*! \brief Set configuration of all performance monitoring counters of an eventSet
+
+A event string looks like Eventname:Countername(:Option1:Option2:...),...
+The eventname, countername and options are checked if they are available.
+@param [in] groupId (returned from perfmon_addEventSet()
+@return error code (-ENOENT if groupId is invalid and -1 if the counters of one CPU cannot be set up)
+*/
+extern int perfmon_setCountersConfig(int groupId) __attribute__ ((visibility ("default") ));
 /*! \brief Start performance monitoring counters
 
 Start the counters that have been previously set up by perfmon_setupCounters().
diff -ruN src.orig/perfmon.c src/perfmon.c
--- src.orig/perfmon.c	2019-06-03 10:12:05.007836000 +0200
+++ src/perfmon.c	2019-06-03 10:15:58.516683000 +0200
@@ -2115,6 +2115,39 @@
 }
 
 int
+perfmon_setCountersConfig(int groupId)
+{
+    int i;
+    int ret = 0;
+    if (!lock_check())
+    {
+        ERROR_PLAIN_PRINT(Access to performance monitoring registers locked);
+        return -ENOLCK;
+    }
+    if (perfmon_initialized != 1)
+    {
+        ERROR_PLAIN_PRINT(Perfmon module not properly initialized);
+        return -EINVAL;
+    }
+    if (unlikely(groupSet == NULL))
+    {
+        return -EINVAL;
+    }
+
+    if (groupId >= groupSet->numberOfActiveGroups)
+    {
+        ERROR_PRINT(Group %d does not exist in groupSet, groupId);
+        return -ENOENT;
+    }
+
+    for(i=0;i<groupSet->numberOfThreads;i++)
+    {
+        memset(currentConfig[groupSet->threads[i].processorId], 0, NUM_PMC * sizeof(uint64_t));
+    }
+    return 0;
+}
+
+int
 __perfmon_startCounters(int groupId)
 {
     int i = 0, j = 0;
